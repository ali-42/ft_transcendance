version: '3'

services:
  db:
    image: postgres:latest
    volumes:
      - db_data:/var/lib/postgresql/data
    container_name: postgress
    restart: always
    expose: 
      - "5432"
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PG_DATA: /var/lib/postgresql/data
    networks:
      - ft_transcendance
    env_file:
      - .env

  back:
    build: "./back/"
    container_name: backend
    restart: always
    ports:
      - "3000:3000"
    command: sh -c "npm install; npm run build; npm run start:dev"
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - ./back:/app
    networks:
      - ft_transcendance
    depends_on:
      - "db"
  front:
    build:
      context: "./front/"
      dockerfile: Dockerfile
    container_name: frontend
     # dockerfile: Dockerfile
    command: sh -c "npm install ; npm run build ; npm run dev"
    ports:
      - "8080:8080"
    volumes:
      - ./front:/app


volumes:
  db_data:
networks:
  ft_transcendance:
    driver: bridge
    #docker-compose -f docker-compose.yml --env-file .env up --build